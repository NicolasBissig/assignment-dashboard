<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>edu.hm.hafner</groupId>
  <artifactId>analysis-dashboard</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>Software Engineering 2 - Static Analysis Dashboard</name>
  <packaging>war</packaging>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.6.6</version>
    <relativePath/>
  </parent>

  <properties>
    <java.version>11</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <codingstyle.config.version>2.20.0</codingstyle.config.version>
    <codingstyle.library.version>${codingstyle.config.version}</codingstyle.library.version>

    <modelmapper.version>3.1.0</modelmapper.version>

    <!-- Project Dependencies Configuration -->
    <javax.annotation-api.version>1.3.2</javax.annotation-api.version>
    <spotbugs.version>4.6.0</spotbugs.version>
    <streamex.version>0.8.1</streamex.version>
    <commons.lang.version>3.12.0</commons.lang.version>

    <!-- Project Test Dependencies Configuration -->
    <junit.version>5.8.2</junit.version>
    <junit-pioneer.version>0.3.0</junit-pioneer.version>
    <mockito.version>4.4.0</mockito.version>
    <assertj.version>3.22.0</assertj.version>
    <archunit.version>0.23.1</archunit.version>
    <slf4j-simple.version>1.7.30</slf4j-simple.version>
    <equalsverifier.version>3.9</equalsverifier.version>

    <!-- Maven Plug-ins Configuration -->
    <maven-deploy-plugin.version>3.0.0-M2</maven-deploy-plugin.version>
    <maven-site-plugin.version>3.11.0</maven-site-plugin.version>
    <maven-install-plugin.version>3.0.0-M1</maven-install-plugin.version>
    <maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
    <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
    <maven-javadoc-plugin.version>3.4.0</maven-javadoc-plugin.version>
    <maven-source-plugin.version>3.2.1</maven-source-plugin.version>
    <maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
    <maven-surefire-plugin.version>3.0.0-M6</maven-surefire-plugin.version>
    <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
    <maven-pmd-plugin.version>3.16.0</maven-pmd-plugin.version>
    <pmd.version>6.44.0</pmd.version>
    <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
    <checkstyle.version>10.2</checkstyle.version>
    <spotbugs-maven-plugin.version>4.6.0.0</spotbugs-maven-plugin.version>
    <findsecbugs-plugin.version>1.12.0</findsecbugs-plugin.version>
    <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
    <maven-pitest-plugin.version>1.7.4</maven-pitest-plugin.version>
    <pitest-junit5-plugin.version>0.15</pitest-junit5-plugin.version>
    <error-prone.version>2.11.0</error-prone.version>
    <nullaway.version>0.9.6</nullaway.version>
    <revapi-maven-plugin.version>0.14.6</revapi-maven-plugin.version>
    <revapi-java.version>0.26.1</revapi-java.version>
    <nexus-staging-maven-plugin.version>1.6.12</nexus-staging-maven-plugin.version>
    <maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <assertj-assertions-generator-maven-plugin.version>2.2.0</assertj-assertions-generator-maven-plugin.version>
    <maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
    <maven-dependency-plugin.version>3.3.0</maven-dependency-plugin.version>
    <depgraph-maven-plugin.version>4.0.1</depgraph-maven-plugin.version>
    <animal-sniffer-maven-plugin.version>1.21</animal-sniffer-maven-plugin.version>

  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.9.0</version>
    </dependency>
    <dependency>
      <groupId>javax.interceptor</groupId>
      <artifactId>javax.interceptor-api</artifactId>
      <version>3.1</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-thymeleaf</artifactId>
      <exclusions>
        <exclusion>
          <groupId>nz.net.ultraq.thymeleaf</groupId>
          <artifactId>thymeleaf-layout-dialect</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>edu.hm.hafner</groupId>
      <artifactId>analysis-model</artifactId>
      <version>10.10.0</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>
    <dependency>
      <groupId>org.modelmapper</groupId>
      <artifactId>modelmapper</artifactId>
      <version>${modelmapper.version}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-launcher</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.toomuchcoding.jsonassert</groupId>
      <artifactId>jsonassert</artifactId>
      <version>0.6.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>5.3.19</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.tngtech.archunit</groupId>
      <artifactId>archunit</artifactId>
      <version>${archunit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
            <configuration>
              <additionalProperties>
                <encoding.source>${project.build.sourceEncoding}</encoding.source>
                <encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
                <java.source>${maven.compiler.source}</java.source>
                <java.target>${maven.compiler.target}</java.target>
              </additionalProperties>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
          <testSource>${java.version}</testSource>
          <testTarget>${java.version}</testTarget>
          <annotationProcessorPaths>
            <path>
              <groupId>com.google.errorprone</groupId>
              <artifactId>error_prone_core</artifactId>
              <version>${error-prone.version}</version>
            </path>
            <path>
              <groupId>com.uber.nullaway</groupId>
              <artifactId>nullaway</artifactId>
              <version>${nullaway.version}</version>
            </path>
          </annotationProcessorPaths>
          <compilerArgs>
            <arg>-Xlint:all</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.api=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.file=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.main=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.processing=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED</arg>
            <arg>-J--add-exports=jdk.compiler/com.sun.tools.javac.parser=ALL-UNNAMED</arg>
            <arg>-J--add-opens=jdk.compiler/com.sun.tools.javac.comp=ALL-UNNAMED</arg>
            <!-- XXX: The awkward comment formatting used here ensures that the plugin arguments are
            separated only by spaces. Once we drop support for JDK 8 we can clean this up; later versions
            do properly handle newline separators. See https://github.com/google/error-prone/pull/1115.
            -->
            <arg>-Xplugin:ErrorProne <!--
                ErrorProne configuration:
                --> -XepExcludedPaths:.*/generated-test-sources/.* <!--
                ErrorProne configuration:
                --> -XepAllDisabledChecksAsWarnings <!--
                ErrorProne configuration:
                --> -XepIgnoreUnknownCheckNames <!--
                ErrorProne configuration:
                --> -XepDisableWarningsInGeneratedCode <!--
                ErrorProne configuration:
                --> -XepAllErrorsAsWarnings <!--
                NullAway configuration:
                --> -Xep:NullAway:WARN <!--
                NullAway configuration:
                --> -XepOpt:NullAway:AnnotatedPackages=edu.hm.hafner <!--
                Disabled ErrorProne rule:
                --> -Xep:ReturnMissingNullable:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:PreferJavaTimeOverload:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:EqualsGetClass:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:AndroidJdkLibsChecker:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:Java7ApiChecker:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:Var:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:PrivateConstructorForUtilityClass:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:MethodCanBeStatic:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:WildcardImport:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:ThrowsUncheckedException:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:UnusedMethod:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:BooleanParameter:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:UnnecessaryFinal:OFF <!--
                Disabled ErrorProne rule:
                --> -Xep:NullableDereference:OFF
            </arg>
            <!-- The Error Prone plugin makes certain
                assumptions about the state of the AST at the
                moment it is invoked. Those assumptions are met
                when using the `simple` compile policy. This
                flag may be dropped after resolution of
                https://bugs.openjdk.java.net/browse/JDK-8155674. -->
            <arg>-XDcompilePolicy=simple</arg>
          </compilerArgs>
          <fork>true</fork>
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <source>${java.version}</source>
          <additionalOptions>-Xdoclint:all</additionalOptions>
          <quiet>true</quiet>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>${file.encoding}</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${maven-source-plugin.version}</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <dependencies>
          <dependency>
            <groupId>com.tngtech.archunit</groupId>
            <artifactId>archunit-junit5-engine</artifactId>
            <version>${archunit.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <executions>
          <execution>
            <id>run-pmd</id>
            <goals>
              <goal>pmd</goal>
              <goal>cpd</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <linkXRef>false</linkXRef>
          <failOnViolation>false</failOnViolation>
          <rulesets>
            <ruleset>pmd-configuration.xml</ruleset>
          </rulesets>
          <targetJdk>${java.version}</targetJdk>
          <includeTests>true</includeTests>
          <minimumTokens>50</minimumTokens>
          <excludeRoots>
            <excludeRoot>target/generated-test-sources/test-annotations</excludeRoot>
            <excludeRoot>target/generated-test-sources/assertj-assertions</excludeRoot>
          </excludeRoots>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>${pmd.version}</version>
          </dependency>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <executions>
          <execution>
            <id>run-checkstyle</id>
            <goals>
              <goal>checkstyle</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <linkXRef>false</linkXRef>
          <excludes>**/*Assert*.java,**/*_jmh*</excludes>
          <failOnViolation>false</failOnViolation>
          <configLocation>checkstyle-configuration.xml</configLocation>
          <includeTestSourceDirectory>true</includeTestSourceDirectory>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>${checkstyle.version}</version>
          </dependency>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>${spotbugs-maven-plugin.version}</version>
        <executions>
          <execution>
            <id>run-spotbugs</id>
            <goals>
              <goal>spotbugs</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
        <configuration>
          <failOnError>false</failOnError>
          <xmlOutput>true</xmlOutput>
          <threshold>Low</threshold>
          <effort>Max</effort>
          <relaxed>false</relaxed>
          <fork>true</fork>
          <excludeFilterFile>spotbugs-exclusion-filter.xml</excludeFilterFile>
          <includeTests>true</includeTests>
          <plugins>
            <plugin>
              <groupId>com.h3xstream.findsecbugs</groupId>
              <artifactId>findsecbugs-plugin</artifactId>
              <version>${findsecbugs-plugin.version}</version>
            </plugin>
          </plugins>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>edu.hm.hafner</groupId>
            <artifactId>codingstyle</artifactId>
            <version>${codingstyle.config.version}</version>
            <classifier>config</classifier>
          </dependency>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>${spotbugs.version}</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <phase>process-test-classes</phase>
          </execution>
          <execution>
            <id>report</id>
            <phase>verify</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.ferstl</groupId>
        <artifactId>depgraph-maven-plugin</artifactId>
        <version>4.0.1</version>
        <configuration>
          <graphFormat>puml</graphFormat>
        </configuration>
      </plugin>

    </plugins>

    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${surefire.maven.plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.junit.jupiter</groupId>
              <artifactId>junit-jupiter-engine</artifactId>
              <version>${junit.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>report</id>
              <phase>prepare-package</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${checkstyle-maven-plugin.version}</version>
          <configuration>
            <configLocation>etc/checkstyle-configuration.xml</configLocation>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${checkstyle.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${pmd-maven-plugin.version}</version>
          <configuration>
            <rulesets>
              <ruleset>etc/pmd-configuration.xml</ruleset>
            </rulesets>
            <targetJdk>${java.version}</targetJdk>
            <includeTests>true</includeTests>
            <minimumTokens>75</minimumTokens>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <xmlOutput>true</xmlOutput>
            <threshold>Low</threshold>
            <effort>Max</effort>
            <relaxed>false</relaxed>
            <fork>true</fork>
            <excludeFilterFile>etc/findbugs-exclusion-filter.xml</excludeFilterFile>
            <includeTests>true</includeTests>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.pitest</groupId>
          <artifactId>pitest-maven</artifactId>
          <version>${pitest-maven-plugin.version}</version>
          <dependencies>
            <dependency>
              <groupId>org.pitest</groupId>
              <artifactId>pitest-junit5-plugin</artifactId>
              <version>${pitest-maven.junit5.plugin}</version>
            </dependency>
          </dependencies>
          <configuration>
            <outputFormats>XML,HTML</outputFormats>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <repositories>
    <repository>
      <id>repo.jenkins-ci.org</id>
      <url>https://repo.jenkins-ci.org/public/</url>
    </repository>
  </repositories>

</project>
